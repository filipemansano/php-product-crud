service: laravel

provider:
    name: aws
    # The AWS region in which to deploy (us-east-1 is the default)
    region: us-east-1
    # The stage of the application, e.g. dev, production, stagingâ€¦ ('dev' is the default)
    stage: dev
    runtime: provided.al2
    environment:
      APP_NAME: Laravel
      APP_ENV: production
      APP_KEY: base64:vkxrSPTgndewozBz1gK4gZ+vFX4T3Dh8s/mRQBGkCwo=
      APP_DEBUG: "false"
      APP_URL:
      LOG_LEVEL: debug
      REQUEST_TIMEOUT: 4
      LOG_CHANNEL: stderr
      BROADCAST_DRIVER: log
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file
      SESSION_LIFETIME: 120
      MEMCACHED_HOST: 127.0.0.1
      REDIS_HOST: 127.0.0.1
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
      MAIL_MAILER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_USERNAME: null
      MAIL_PASSWORD: null
      MAIL_ENCRYPTION: null
      MAIL_FROM_ADDRESS: null
      MAIL_FROM_NAME: "${APP_NAME}"
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_DEFAULT_REGION: us-east-1
      AWS_BUCKET:
      PUSHER_APP_ID:
      PUSHER_APP_KEY:
      PUSHER_APP_SECRET:
      PUSHER_APP_CLUSTER: mt1
      MIX_PUSHER_APP_KEY: "${PUSHER_APP_KEY}"
      MIX_PUSHER_APP_CLUSTER: "${PUSHER_APP_CLUSTER}"
      DB_CONNECTION: mysql
      DB_DATABASE: products
      DB_USERNAME: test
      DB_PASSWORD: MCmaUgT97gh6uUk3
      DB_HOST:
        'Fn::GetAtt': ["RDS", "Endpoint.Address"]
      DB_PORT:
        'Fn::GetAtt': ["RDS", "Endpoint.Port"]
    apiGateway:
      shouldStartNameWithService: true
    tracing:
      apiGateway: true
      lambda: true
    lambdaHashingVersion: 20201221

package:
    # Directories to exclude from deployment
    exclude:
        - node_modules/**
        - public/storage
        - resources/assets/**
        - storage/**
        - tests/**

functions:
    # This function runs the Laravel website/API
    web:
        handler: public/index.php
        timeout: 5 # in seconds (API Gateway has a timeout of 29 seconds)
        tracing: Active
        layers:
            - ${bref:layer.php-74-fpm}
        events:
            -   httpApi: '*'
            # https://bref.sh/docs/runtimes/http.html#cold-starts
            -   schedule:
                  rate: rate(5 minutes)
                  input:
                    warmer: true
    # This function lets us run artisan commands in Lambda
    artisan:
        handler: artisan
        timeout: 120 # in seconds
        layers:
            - ${bref:layer.php-74} # PHP
            - ${bref:layer.console} # The "console" layer

plugins:
    # We need to include the Bref plugin
    - ./vendor/bref/bref

resources:
  Resources:
    RDS:
      Type: AWS::RDS::DBInstance
      DeletionPolicy: Delete # IN PROD MOD, modify to snapshot
      Properties:
        Engine: mysql
        EngineVersion: 8.0.21
        DBInstanceClass: db.t2.micro
        MasterUsername: test # ${ssm:/path/to/service/myParam}-hello
        MasterUserPassword: MCmaUgT97gh6uUk3
        DBInstanceIdentifier: api-products
        AllocatedStorage: '5'
        DBName: products
